{"version":3,"sources":["../img/organ-blue-infected.png","../img/organ-green-infected.png","../img/organ-red-infected.png","../img/organ-yellow-infected.png","../img/organ-blue-treated.png","../img/organ-green-treated.png","../img/organ-red-treated.png","../img/organ-yellow-treated.png","../img/organ-blue-cured.png","../img/organ-green-cured.png","../img/organ-red-cured.png","../img/organ-yellow-cured.png","../img/lek-blue.png","../img/lek-green.png","../img/lek-red.png","../img/lek-yellow.png","../img/organ-blue.png","../img/organ-green.png","../img/organ-red.png","../img/organ-yellow.png","../img/wirus-blue.png","../img/wirus-green.png","../img/wirus-red.png","../img/wirus-yellow.png","mqttClient.js","LoginPage.js","RegisterPage.js","GamesPage.js","Game.js","GamePage.js","UserPage.js","App.js","index.js","../img sync /^/.*/.png$","../img sync /^/.*/-infected/.png$","../img sync /^/.*/-treated/.png$","../img sync /^/.*/-cured/.png$"],"names":["properties","usersReload","gamesReload","mainChatReload","mainChat","gameReload","gamePlayersReload","gameChatReload","gameChat","messagesReload","messages","invitesReload","invites","client","mqtt","connect","on","topic","message","console","log","toString","startsWith","push","JSON","parse","find","invite","id","LoginPage","setMainLogin","navigate","useNavigate","useState","login","setLogin","password","setPassword","error","setError","className","type","onChange","event","target","value","onClick","axios","post","withCredentials","then","a","response","data","subscribe","publish","e","status","catch","alert","to","RegisterPage","length","GamesPage","games","setGames","users","setUsers","chat","setChat","setMessage","search","setSearch","setInvites","Reload","get","finally","onChangeMessage","keyCode","Send","trim","Search","useEffect","setInterval","style","color","textDecoration","unsubscribe","roomName","prompt","admin","name","map","index","onKeyUp","user","game","players","maxPlayers","gameStarted","Game","setGame2","inGame","useParams","setGame","setPlayers","cards","setCards","organs","setOrgans","chosenCard","setChosenCard","setTarget","win","setWin","Reload_Game","playersCards","playersOrgans","filter","player","card","infected","src","require","cardType","cardColor","default","alt","treated","cured","turn","undefined","GamePage","setAdmin","setInGame","edit","setEdit","editForm","setEditForm","setInvite","userToInvite","setUserToInvite","onlineUsers","setOnlineUsers","GoBack","i","defaultValue","put","stringify","UserPage","userLogin","setUser","editNewPassword","setEditNewPassword","editOldPassword","setEditOldPassword","editLogin","setEditLogin","wrongPassword","setWrongPassword","deleteUser","setDeleteUser","sendMessage","setSendMessage","setMessages","Cancel","loggedIn","bcrypt","compareSync","Cookies","set","delete","remove","from","at","Date","getHours","getMinutes","App","cookie","exact","path","element","ReactDOM","render","CookiesProvider","document","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.834abd44.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/organ-blue-infected.5c22be59.png\";","export default __webpack_public_path__ + \"static/media/organ-green-infected.673a619b.png\";","export default __webpack_public_path__ + \"static/media/organ-red-infected.26732e3d.png\";","export default __webpack_public_path__ + \"static/media/organ-yellow-infected.01546c5c.png\";","export default __webpack_public_path__ + \"static/media/organ-blue-treated.f18def56.png\";","export default __webpack_public_path__ + \"static/media/organ-green-treated.da0f1e0e.png\";","export default __webpack_public_path__ + \"static/media/organ-red-treated.0ab3321e.png\";","export default __webpack_public_path__ + \"static/media/organ-yellow-treated.d10d4532.png\";","export default __webpack_public_path__ + \"static/media/organ-blue-cured.49a03bfa.png\";","export default __webpack_public_path__ + \"static/media/organ-green-cured.c0c307c2.png\";","export default __webpack_public_path__ + \"static/media/organ-red-cured.30273bdd.png\";","export default __webpack_public_path__ + \"static/media/organ-yellow-cured.5345da97.png\";","export default __webpack_public_path__ + \"static/media/lek-blue.ab0e3daf.png\";","export default __webpack_public_path__ + \"static/media/lek-green.2ab04cf1.png\";","export default __webpack_public_path__ + \"static/media/lek-red.ed237b10.png\";","export default __webpack_public_path__ + \"static/media/lek-yellow.ee162b90.png\";","export default __webpack_public_path__ + \"static/media/organ-blue.ab4ac3e2.png\";","export default __webpack_public_path__ + \"static/media/organ-green.d759c213.png\";","export default __webpack_public_path__ + \"static/media/organ-red.d9a41123.png\";","export default __webpack_public_path__ + \"static/media/organ-yellow.e36be9f1.png\";","export default __webpack_public_path__ + \"static/media/wirus-blue.ebbbb969.png\";","export default __webpack_public_path__ + \"static/media/wirus-green.312e2da7.png\";","export default __webpack_public_path__ + \"static/media/wirus-red.d0668b7e.png\";","export default __webpack_public_path__ + \"static/media/wirus-yellow.ae1f8970.png\";","import mqtt from \"mqtt\";\r\n\r\nvar properties = {\r\n    usersReload: false,\r\n    gamesReload: false,\r\n    mainChatReload: false,\r\n    mainChat: [],\r\n    gameReload: false,\r\n    gamePlayersReload: false,\r\n    gameChatReload: false,\r\n    gameChat: [],\r\n    messagesReload: false,\r\n    messages: [],\r\n    invitesReload: false,\r\n    invites: [],\r\n    client: mqtt.connect('ws://127.0.0.1:8082/mqtt'),\r\n}\r\n\r\nproperties.client.on('message', (topic, message) => {\r\n    if(topic === '/login' || topic === '/logout' || topic === '/guest'){\r\n        console.log(message.toString())\r\n        properties.usersReload = true;\r\n    }\r\n    if(topic === '/login' && !message.toString().startsWith('guest') && message.toString() !== 'edit'){\r\n        properties.mainChat.push(message.toString() + ' has joined the chat')\r\n        properties.mainChatReload = true;\r\n    }\r\n    if(topic === '/logout' && !message.toString().startsWith('guest')){\r\n        properties.mainChat.push(message.toString() + ' has left the chat')\r\n        properties.mainChatReload = true;\r\n    }\r\n    if(topic === '/games'){\r\n        console.log(message.toString())\r\n        properties.gamesReload = true;\r\n    }  \r\n    if(topic === '/main-chat'){ \r\n        console.log(message.toString())\r\n        properties.mainChat.push(message.toString())\r\n        properties.mainChatReload = true;\r\n    }\r\n    if(topic.startsWith('/game/')){\r\n        console.log(message.toString())\r\n        properties.gameReload = true;\r\n    }\r\n    if(topic.startsWith('/players/')){\r\n        console.log(message.toString())\r\n        properties.gamePlayersReload = true;\r\n    }\r\n    if(topic.startsWith('/chat/')){\r\n        console.log(message.toString())\r\n        properties.gameChat.push(message.toString())\r\n        properties.gameChatReload = true;\r\n    }\r\n    if(topic.startsWith('/messages/')){\r\n        console.log(JSON.parse(message.toString()))\r\n        properties.messages.push(JSON.parse(message.toString()))\r\n        properties.messagesReload = true;\r\n    }\r\n    if(topic.startsWith('/invites/')){\r\n        console.log(JSON.parse(message.toString()))\r\n        if(!properties.invites.find(invite => invite.id === JSON.parse(message.toString()).id)){\r\n            properties.invites.push(JSON.parse(message.toString()))\r\n            properties.invitesReload = true;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport default properties;","import axios from 'axios'\r\nimport {useState} from 'react'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport properties from './mqttClient'\r\n\r\nfunction LoginPage({setMainLogin}){\r\n    const navigate = useNavigate()\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    function onChangeLogin(event){\r\n        setLogin(event.target.value)\r\n    }\r\n\r\n    function onChangePassword(event){\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    function logIn (){\r\n        axios.post('http://localhost:5000/login', {\r\n            login: login,\r\n            password: password\r\n        }, { withCredentials: true})\r\n        .then(async(response)=>{\r\n            console.log(response.data)\r\n            setMainLogin(response.data.login)\r\n            properties.client.subscribe(`/messages/${response.data.login}/+`)\r\n            properties.client.subscribe(`/messages/+/${response.data.login}`)\r\n            properties.client.publish('/login', response.data.login)\r\n            navigate('/games')\r\n        }, (e)=>{\r\n            if (e.response && e.response.status === 401){\r\n                setError('Wrong login or password')\r\n            } else {\r\n                console.log(e)\r\n            }\r\n        });\r\n    }\r\n\r\n    function Guest(){\r\n        axios.post('http://localhost:5000/guest',{}, { withCredentials: true})\r\n        .then(async(response)=>{\r\n            console.log(response.data)\r\n            setMainLogin(response.data.login)\r\n            properties.client.subscribe(`/messages/${response.data.login}/+`)\r\n            properties.client.subscribe(`/messages/+/${response.data.login}`)\r\n            properties.client.subscribe(`/invites/${response.data.login}`)\r\n            properties.client.publish('/guest', response.data.login)\r\n            navigate('/games')\r\n        }).catch((e)=>{\r\n            alert('Wystąpił błąd')\r\n            console.log(e)\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-page\">\r\n            <form>\r\n                \r\n                <label> Login: </label>\r\n                <input type=\"text\" id=\"login\" onChange={onChangeLogin}></input>\r\n            \r\n                <label> Password: </label>\r\n                <input type=\"password\" id=\"password\" onChange={onChangePassword}></input>\r\n            \r\n            </form> \r\n\r\n            {error && <div className=\"error\">{error}</div>}\r\n\r\n            <div>\r\n                <button onClick={ logIn }> Login </button>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick={ Guest }> Login as guest </button>\r\n            </div>\r\n            <Link to={`/register`}>\r\n                <div>\r\n                    <button onClick={() => {} }> Register </button>\r\n                </div>\r\n            </Link>\r\n\r\n            <Link to={`/`}>\r\n                <div>\r\n                    <button onClick={() => {} }> Cancel </button>\r\n                </div>\r\n            </Link>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import axios from 'axios'\r\nimport {useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\n\r\nfunction RegisterPage(){\r\n    const navigate = useNavigate()\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    function onChangeLogin(event){\r\n        setLogin(event.target.value)\r\n    }\r\n\r\n    function onChangePassword(event){\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    function Register (){\r\n        if(login.length > 0 && password.length > 0){\r\n            axios.post('http://localhost:5000/register', {\r\n                login: login,\r\n                password: password\r\n            }).then(async (response)=>{\r\n                console.log(response.data)\r\n                alert('Zarejestrowano jako ' + response.data.login)\r\n                navigate('/login')\r\n            }, (e)=>{\r\n                if (e.response && e.response.status === 401){\r\n                    setError('Login is already taken')\r\n                } else {\r\n                    console.log(e)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-page\">\r\n            <form>\r\n                <label> Login: </label>\r\n                <input type=\"text\" id=\"login\" onChange={onChangeLogin}></input>\r\n            \r\n                <label> Password: </label>\r\n                <input type=\"password\" id=\"password\" onChange={onChangePassword}></input>\r\n            </form> \r\n\r\n            {error && <div className=\"error\">{error}</div>}\r\n\r\n            <div>\r\n                <button onClick={ Register }> Register </button>\r\n            </div>\r\n            <div>\r\n                <button onClick={ () => {navigate('/login')} }> Cancel </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import axios from 'axios'\r\nimport {useState, useEffect} from 'react'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport properties from './mqttClient'\r\n\r\nfunction GamesPage({login, setMainLogin}){\r\n    const navigate = useNavigate()\r\n    const [games, setGames] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [chat, setChat] = useState([])\r\n    const [message, setMessage] = useState('')\r\n    const [search, setSearch] = useState('')\r\n    const [invites, setInvites] = useState([])\r\n\r\n    useEffect(()=>{\r\n        properties.client.subscribe('/games');\r\n        properties.client.subscribe('/login');\r\n        properties.client.subscribe('/logout');\r\n        properties.client.subscribe('/guest');\r\n        properties.client.subscribe('/main-chat');\r\n        if (login){\r\n            properties.client.subscribe(`/messages/${login}/+`)\r\n            properties.client.subscribe(`/messages/+/${login}`)\r\n            properties.client.subscribe(`/invites/${login}`)\r\n        }\r\n        setChat(properties.mainChat)\r\n        setInvites(properties.invites)\r\n        Reload()\r\n        axios.get('http://localhost:5000/games')\r\n        .then(async(response)=>{\r\n          setGames(response.data)\r\n        }).catch((e)=>{\r\n            if (e.response){\r\n                console.log(e.response.data)\r\n            }\r\n        });\r\n        axios.get('http://localhost:5000/online-users')\r\n        .then(async(response)=>{\r\n            setUsers(response.data)\r\n        }).catch((e)=>{\r\n            if (e.response){\r\n                console.log(e.response.data)\r\n            }\r\n        });\r\n        return () => {\r\n            setGames([])\r\n            setUsers([])\r\n        }\r\n      }, []);\r\n\r\n    function Reload (){\r\n        if(properties.usersReload){\r\n            axios.get('http://localhost:5000/online-users')\r\n            .then(async(response)=>{\r\n                setUsers(response.data)\r\n            }).catch((e)=>{\r\n                if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            }).finally(()=>{\r\n                properties.usersReload = false\r\n            });\r\n        }\r\n        if(properties.gamesReload){\r\n            axios.get(`http://localhost:5000/games/?search=${search}`)\r\n            .then(async(response)=>{\r\n                setGames(response.data)\r\n            }).catch((e)=>{\r\n                if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            }).finally(()=>{\r\n                properties.gamesReload = false\r\n            });\r\n        }\r\n        if(properties.mainChatReload){\r\n            setChat(properties.mainChat)\r\n            properties.mainChatReload = false\r\n        }\r\n        if(properties.invitesReload){\r\n            setInvites(properties.invites)\r\n            properties.invitesReload = false\r\n        }\r\n    }\r\n    setInterval(Reload, 1000)\r\n\r\n    function logOut(){\r\n        axios.post('http://localhost:5000/logout', {login: login}, { withCredentials: true})\r\n        .then(async(response)=>{\r\n            console.log(response.data)\r\n            properties.client.unsubscribe(`/messages/${login}/+`)\r\n            properties.client.unsubscribe(`/messages/+/${login}`)\r\n            properties.client.publish('/logout', login)\r\n            setMainLogin('')\r\n            properties.messages = []\r\n        }).catch((e)=>{\r\n            if (e.response){\r\n                console.log(e.response.data)\r\n            }\r\n        }).finally(()=>{\r\n            Reload();\r\n        });\r\n    }\r\n\r\n    function CreateRoom(){\r\n        const roomName = prompt(\"Podaj nazwę pokoju\")\r\n        if(roomName){\r\n            axios.post('http://localhost:5000/games/', {\r\n                admin: login,\r\n                name: roomName\r\n            }).then(async(response)=>{\r\n                console.log(response.data)\r\n                setGames([...games, response.data])\r\n                properties.client.publish('/games', response.data.name)\r\n                navigate('/games/' + response.data.id)\r\n            }).catch((e)=>{\r\n                if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function onChangeMessage(e){\r\n        setMessage(e.target.value)\r\n        if (e.keyCode === 13)\r\n            Send()\r\n    }\r\n\r\n    function Send(){\r\n        if(message.trim().length > 0){\r\n            properties.client.publish('/main-chat', `${login}: ${message}`)\r\n            setChat([...chat, `${login}: ${message}`])\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    function Search(){\r\n        axios.get(`http://localhost:5000/games/?search=${search}`)\r\n            .then(async(response)=>{\r\n                setGames(response.data)\r\n            }).catch((e)=>{\r\n                if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            })\r\n    }\r\n    \r\n    return(\r\n        <div className=\"games-page\">\r\n            <h1>WIRUS</h1>\r\n\r\n            <div className=\"user-menu\">\r\n                {login !== '' && \r\n                    <h3> Logged as: \r\n                        <Link to={`/users/${login}`} style={{ color: 'inherit', textDecoration: 'inherit'}}><div>{login}</div></Link>\r\n                    </h3>}\r\n                {login !== '' && <button onClick={logOut}> Log Out </button>}\r\n\r\n                {login === '' && <Link to=\"/login\"><button> Log In </button></Link>}\r\n\r\n                {login !== '' &&\r\n                <div>\r\n                    <button onClick={CreateRoom}> Create room </button>\r\n                </div>\r\n                }\r\n                {invites.length > 0 && <div className='invitesSection'>\r\n                    <h3>Invites:</h3>\r\n                    <div className='invites'>\r\n                        {invites.map((invite)=>{\r\n                            return(\r\n                                <div key={invite.id} className='invite'>\r\n                                    <Link to={`/games/${invite.id}`} style={{ color: 'inherit', textDecoration: 'inherit'}}>{invite.name}</Link>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n\r\n            <div className=\"chat\">\r\n                <div>\r\n                    {chat.map((message, index)=>{\r\n                        return(\r\n                            <p key={index}>\r\n                                {message}\r\n                            </p>\r\n                        )}\r\n                    )}\r\n                </div>\r\n                { login && <input type=\"text\" value={message} onChange={onChangeMessage} onKeyUp={onChangeMessage} />}\r\n                { login && <button onClick={Send}> Send </button>}\r\n            </div>\r\n\r\n            <div className=\"users-list\">\r\n                {users.length === 0 && <h3> No users online </h3>}\r\n\r\n                {users.length > 0 &&\r\n                    <div>\r\n                        <h3>Online users:</h3>\r\n                        <div>\r\n                            {users.map(user => {\r\n                                return (<Link key={user.login} style={{ color: 'inherit', textDecoration: 'inherit'}} to={`/users/${user.login}`}>\r\n                                    <div>{user.login}</div>\r\n                                </Link>)\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"rooms-list\">\r\n                <div className='search'>\r\n                    <input type=\"text\" value={search} onChange={(e)=>{setSearch(e.target.value)}} onKeyUp={(e)=>{if (e.keyCode === 13) Search()}} />\r\n                    <button onClick={Search}> Search </button>\r\n                </div>\r\n\r\n                {games.length === 0 && <h3> No rooms available </h3>}\r\n\r\n                {games.length > 0 &&\r\n                    <div>\r\n                        <h2>Available rooms:</h2>\r\n                        {games.map(game => {\r\n                            if ( game.status === \"public\") {\r\n                                return (\r\n                                <Link key={game.id} style={{ color: 'inherit', textDecoration: 'inherit'}} to={`/games/${game.id}`}>\r\n                                    <div className=\"room\">\r\n                                        <h3>{game.name}</h3>\r\n                                        <div>{game.players.length} / {game.maxPlayers}</div>\r\n                                        { game.gameStarted && <h4>(started)</h4>}\r\n                                    </div>\r\n                                </Link>)\r\n                            } else if (game.status === \"private\") {\r\n                                return(\r\n                                    <div className=\"unavailable room\" key={game.id}>\r\n                                        <h3>{game.name}</h3>\r\n                                        <div>{game.players.length} / {game.maxPlayers}</div>\r\n                                    </div>)\r\n                            } else {\r\n                                return null\r\n                            }\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GamesPage;","import axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams} from 'react-router-dom'\r\nimport properties from './mqttClient'\r\n\r\nfunction Game({login, setGame2, inGame, Reload}) {\r\n    const { id } = useParams()\r\n    const [game, setGame] = useState({})\r\n    const [players, setPlayers] = useState([])\r\n    const [cards, setCards] = useState({})\r\n    const [organs, setOrgans] = useState({})\r\n    const [chosenCard, setChosenCard] = useState({})\r\n    const [target, setTarget] = useState('')\r\n    const [win, setWin] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/games/${id}`)\r\n            .then(async (response) => {\r\n                setGame(response.data)\r\n                setPlayers(response.data.players)\r\n                setCards(response.data.playersCards)\r\n                setOrgans(response.data.playersOrgans)\r\n            }).catch((e) => {\r\n                if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            });\r\n        Reload_Game()\r\n        Reload()\r\n        return () => {\r\n            setGame({})\r\n            setPlayers([])\r\n            setCards({})\r\n            setOrgans({})\r\n        }\r\n    }, [id]);\r\n\r\n    function Reload_Game (){\r\n        if(properties.gameReload){\r\n            axios.get(`http://localhost:5000/games/${id}`)\r\n            .then(async(response)=>{\r\n                setGame(response.data)\r\n                setPlayers(response.data.players)\r\n                setCards(response.data.playersCards)\r\n                setOrgans(response.data.playersOrgans)\r\n            }).catch((e)=>{\r\n                if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            }).finally(()=>{\r\n                properties.gameReload = false\r\n                properties.gamePlayersReload = false\r\n            });\r\n        }\r\n    }\r\n    setInterval(Reload_Game, 1000);\r\n\r\n    function Play(){\r\n        if (chosenCard.cardColor !== undefined && chosenCard.cardType !== undefined ) {\r\n            axios.post(`http://localhost:5000/games/play/${id}`, {\r\n                login: login,\r\n                card: chosenCard,\r\n                target: target\r\n            }).then(async(response) => {\r\n                properties.client.publish(`/game/${id}`, id)\r\n                console.log(response.data)\r\n                setGame(response.data.game)\r\n                setPlayers(response.data.game.players)\r\n                setCards(response.data.game.playersCards)\r\n                setOrgans(response.data.game.playersOrgans)\r\n                setWin(response.data.win)\r\n                setError('')\r\n                if(response.data.win){\r\n                    properties.client.publish(`/chat/${id}`, `${login} won the game!`)\r\n                    setGame2(response.data.game)\r\n                    Reload()\r\n                }\r\n            }).catch((e) => {\r\n                if (e.response){\r\n                    setError(e.response.data)\r\n                    console.log(e.response.data)\r\n                }\r\n            }).finally(() => {\r\n                setChosenCard({})\r\n                setTarget('')\r\n                Reload_Game()\r\n                Reload()\r\n            });\r\n        }\r\n    }\r\n\r\n    function Discard(){\r\n        if (chosenCard.cardColor !== undefined && chosenCard.cardType !== undefined ) {\r\n            axios.post(`http://localhost:5000/games/discard/${id}`, {\r\n                login: login,\r\n                card: chosenCard\r\n            }).then(async (response) => {\r\n                properties.client.publish(`/game/${id}`, id)\r\n                console.log(response.data)\r\n                setGame(response.data)\r\n                setPlayers(response.data.players)\r\n                setCards(response.data.playersCards)\r\n                setOrgans(response.data.playersOrgans)\r\n                setError('')\r\n            }).catch((e) => {\r\n                if (e.response){\r\n                    setError(e.response.data)\r\n                    console.log(e.response.data)\r\n                }\r\n            }).finally(() => {\r\n                setChosenCard({})\r\n                Reload_Game()\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='oponents'>\r\n                {players.filter(player => player.login !== login).map((player, index) => {\r\n                    if (player.login === target) {\r\n                        return (\r\n                            <button key={index} onClick={() => setTarget(player.login)} className='chosen' >\r\n                                <div key={index} className='oponent'>\r\n                                    <h3>{player.login}</h3>\r\n                                    {organs[player.login] && organs[player.login].map((card, index) => {\r\n                                        if (card.infected) {\r\n                                            return (\r\n                                                <div key={index} className='card'>\r\n                                                    <img src={require(`../img/${card.cardType}-${card.cardColor}-infected.png`).default} alt={card.cardColor + card.cardType} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        if (card.treated && !card.cured) {\r\n                                            return (\r\n                                                <div key={index} className='card'>\r\n                                                    <img src={require(`../img/${card.cardType}-${card.cardColor}-treated.png`).default} alt={card.cardColor + card.cardType} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        if (card.cured) {\r\n                                            return (\r\n                                                <div key={index} className='card'>\r\n                                                    <img src={require(`../img/${card.cardType}-${card.cardColor}-cured.png`).default} alt={card.cardColor + card.cardType} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        return (\r\n                                            <div key={index} className='card'>\r\n                                                <img src={require(`../img/${card.cardType}-${card.cardColor}.png`).default} alt={card.cardColor + card.cardType} />\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </button>\r\n                        )}\r\n                    return (\r\n                        <button key={index} onClick={() => setTarget(player.login)}>\r\n                            <div key={index} className='oponent'>\r\n                                <h3>{player.login}</h3>\r\n                                {organs[player.login] && organs[player.login].map((card, index) => {\r\n                                    if (card.infected) {\r\n                                        return (\r\n                                            <div key={index} className='card'>\r\n                                                <img src={require(`../img/${card.cardType}-${card.cardColor}-infected.png`).default} alt={card.cardColor + card.cardType} />\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    if (card.treated && !card.cured) {\r\n                                        return (\r\n                                            <div key={index} className='card'>\r\n                                                <img src={require(`../img/${card.cardType}-${card.cardColor}-treated.png`).default} alt={card.cardColor + card.cardType} />\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    if (card.cured) {\r\n                                        return (\r\n                                            <div key={index} className='card'>\r\n                                                <img src={require(`../img/${card.cardType}-${card.cardColor}-cured.png`).default} alt={card.cardColor + card.cardType} />\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    return (\r\n                                        <div key={index} className='card'>\r\n                                            <img src={require(`../img/${card.cardType}-${card.cardColor}.png`).default} alt={card.cardColor + card.cardType} />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </button>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            {!win && <div>\r\n                {players.filter(player => player === players[game.turn]).map((player, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <h3>Kolejka: {player.login}</h3>\r\n                        </div>\r\n                        )\r\n                })}\r\n            </div>}\r\n\r\n            {win && <div>\r\n                <h3>Wygrał gracz: {win}</h3>\r\n            </div>}\r\n\r\n            {inGame && <div className='player'>\r\n                <div className='organs'>\r\n                    <h3>Your organs</h3>    \r\n                    {organs[login] && organs[login].map((card, index) => {\r\n                        if (card.infected) {\r\n                            return (\r\n                                <div key={index} className='card'>\r\n                                    <img src={require(`../img/${card.cardType}-${card.cardColor}-infected.png`).default} alt={card.cardColor + card.cardType} />\r\n                                </div>\r\n                            )\r\n                        }\r\n                        if (card.treated && !card.cured) {\r\n                            return (\r\n                                <div key={index} className='card'>\r\n                                    <img src={require(`../img/${card.cardType}-${card.cardColor}-treated.png`).default} alt={card.cardColor + card.cardType} />\r\n                                </div>\r\n                            )\r\n                        }\r\n                        if (card.cured) {\r\n                            return (\r\n                                <div key={index} className='card'>\r\n                                    <img src={require(`../img/${card.cardType}-${card.cardColor}-cured.png`).default} alt={card.cardColor + card.cardType} />\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <div key={index} className='card'>\r\n                                <img src={require(`../img/${card.cardType}-${card.cardColor}.png`).default} alt={card.cardColor + card.cardType} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div><div className='cards'>\r\n                    <h3>Your cards</h3>\r\n                    {cards[login] && cards[login].map((card, index) => {\r\n                        if (card === chosenCard) {\r\n                            return (\r\n                                <div key={index} className='card'>\r\n                                    <button className='chosen'>\r\n                                        <img src={require(`../img/${card.cardType}-${card.cardColor}.png`).default} alt={card.cardColor + card.cardType} />\r\n                                    </button>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <div key={index} className='card'>\r\n                                <button onClick={() => setChosenCard(card)}>\r\n                                    <img src={require(`../img/${card.cardType}-${card.cardColor}.png`).default} alt={card.cardColor + card.cardType} />\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    { players.find(player => player.login === login) === players[game.turn] && <div>\r\n                        <button onClick={Play}>Play</button>\r\n                        <button onClick={Discard}>Discard</button>\r\n                    </div> }\r\n                    {error && <div className='error'>{error}</div>}\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Game;","import axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport properties from './mqttClient'\r\nimport Game from './Game'\r\n\r\nfunction GamePage({login}) {\r\n    const navigate = useNavigate()\r\n    const { id } = useParams()\r\n    const [game, setGame] = useState({})\r\n    const [admin, setAdmin] = useState({})\r\n    const [players, setPlayers] = useState([{login: ''}])\r\n    const [inGame, setInGame] = useState(false)\r\n    const [edit, setEdit] = useState(false)\r\n    const [editForm, setEditForm] = useState({})\r\n    const [chat, setChat] = useState([])\r\n    const [message, setMessage] = useState('')\r\n    const [invite, setInvite] = useState(false)\r\n    const [userToInvite, setUserToInvite] = useState('')\r\n    const [onlineUsers, setOnlineUsers] = useState([])\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        properties.client.unsubscribe('/games');\r\n        properties.client.unsubscribe('/login');\r\n        properties.client.unsubscribe('/logout');\r\n        properties.client.unsubscribe('/guest');\r\n        properties.client.unsubscribe('/main-chat');\r\n        properties.client.subscribe(`/game/${id}`);\r\n        properties.client.subscribe(`/players/${id}`);\r\n        properties.client.subscribe(`/chat/${id}`);\r\n        if (login){\r\n            properties.client.subscribe(`/messages/${login}/+`)\r\n            properties.client.subscribe(`/messages/+/${login}`)\r\n            properties.client.subscribe(`/invites/${login}`)\r\n        }\r\n        properties.gameChat = []\r\n        axios.get(`http://localhost:5000/games/${id}`)\r\n            .then(async (response) => {\r\n                console.log(response.data)\r\n                setGame(response.data)\r\n                setAdmin(response.data.admin)\r\n                setPlayers(response.data.players)\r\n            }).catch((e) => {\r\n                if (e.response){\r\n                    console.log(e.response.data)\r\n                    setError(e.response.data)\r\n                }\r\n            });\r\n        return () => {\r\n            setGame({})\r\n            setAdmin({})\r\n            setPlayers([])\r\n        }\r\n    }, [id]);\r\n    useEffect(() => {\r\n        if (players === undefined || players.length === 0) {\r\n            properties.client.publish(`/games`, id);\r\n            GoBack()\r\n        }\r\n        if (players !== undefined) {\r\n            for (var i=0; i<players.length; i++) {\r\n                if (players[i].login === login) {\r\n                    setInGame(true)\r\n                    break\r\n                } else {\r\n                    setInGame(false)\r\n                }\r\n            }\r\n        }\r\n    }, [players]);\r\n\r\n    function Reload (){\r\n        if(properties.gameReload || properties.gamePlayersReload){\r\n            axios.get(`http://localhost:5000/games/${id}`)\r\n            .then(async(response)=>{\r\n                console.log(response.data)\r\n                setGame(response.data)\r\n                setAdmin(response.data.admin)\r\n                setPlayers(response.data.players)\r\n            }).catch((e)=>{\r\n                if (e.response && e.response.status === 404) {\r\n                    GoBack()\r\n                } else if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            }).finally(()=>{\r\n                properties.gameReload = false\r\n                properties.gamePlayersReload = false\r\n            });\r\n        }\r\n        if(properties.gameChatReload){\r\n            setChat(properties.gameChat)\r\n            properties.gameChatReload = false\r\n        }\r\n    }\r\n    setInterval(Reload, 1000);\r\n\r\n    function Leave(){\r\n        axios.post(`http://localhost:5000/games/leave`, { \r\n            login: login\r\n        }).then(async (response) => {\r\n            setInGame(false)\r\n            console.log(response.data)\r\n            properties.client.publish(`/players/${id}`, login)\r\n            properties.client.publish(`/chat/${id}`, `${login} has left the game`)\r\n            setPlayers(response.data.players)\r\n        }).catch((e) => {\r\n            if (e.response){\r\n                console.log(e.response.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    function Join(){\r\n        axios.post('http://localhost:5000/games/join', {\r\n            id: id,\r\n            login: login\r\n        }).then(async(response)=>{\r\n            console.log(response.data)\r\n            setPlayers(response.data.players)\r\n            setInGame(true)\r\n            properties.client.publish(`/players/${id}`, login)\r\n            properties.client.publish(`/chat/${id}`, `${login} has joined the game`)\r\n        }).catch((e)=>{\r\n            if (e.response){\r\n                console.log(e.response.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    function Edit(){\r\n        axios.put(`http://localhost:5000/games/${id}`, { \r\n            name: editForm.name,\r\n            maxPlayers: editForm.maxPlayers,\r\n            status: editForm.status,\r\n            admin: editForm.admin\r\n        }).then(async(response)=>{\r\n            console.log(response.data)\r\n            setGame(response.data)\r\n            setAdmin(response.data.admin)\r\n            properties.client.publish(`/game/${id}`, id)\r\n        }).catch((e)=>{\r\n            if (e.response){\r\n                console.log(e.response.data)\r\n            }\r\n        }).finally(()=>{\r\n            setEdit(false)\r\n            setEditForm({})\r\n        });\r\n    }\r\n\r\n    function GoBack(){\r\n        properties.client.unsubscribe(`/game/${id}`)\r\n        properties.client.unsubscribe(`/players/${id}`)\r\n        properties.client.unsubscribe(`/chat/${id}`)\r\n        navigate('/games')\r\n    }\r\n\r\n    function onChangeMessage(e){\r\n        setMessage(e.target.value)\r\n        if (e.keyCode === 13)\r\n            Send()\r\n    }\r\n\r\n    function Send(){\r\n        if(message.trim().length > 0){\r\n            properties.client.publish(`/chat/${id}`, `${login}: ${message}`)\r\n            setChat([...chat, `${login}: ${message}`])\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    function Start(){\r\n        axios.post(`http://localhost:5000/games/start/${id}`)\r\n        .then(async(response)=>{\r\n            properties.client.publish(`/game/${id}`, id)\r\n            console.log(response.data)\r\n            setGame(response.data)\r\n            setAdmin(response.data.admin)\r\n            setPlayers(response.data.players)\r\n        }).catch((e)=>{\r\n            if (e.response){\r\n                console.log(e.response.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    function CheckInvite(){\r\n        setInvite(true)\r\n        axios.get('http://localhost:5000/online-users')\r\n        .then(async(response)=>{\r\n            setOnlineUsers(response.data)\r\n        }).catch((e)=>{\r\n            if (e.response){\r\n                console.log(e.response.data)\r\n            }\r\n        });\r\n    }\r\n\r\n    function Invite(){\r\n        setInvite(false)\r\n        properties.client.publish(`/invites/${userToInvite}`, JSON.stringify({id: id, name: game.name}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!error && <div>\r\n                {players &&\r\n                <div className='game-page'>\r\n                    <h1>{game.name}</h1>\r\n\r\n                    <div className='menu'>\r\n\r\n                        { (login !== admin.login || edit === false) && <div className='info'>\r\n                            <div>maxPlayers: {game.maxPlayers}</div>\r\n                            <div>Status: {game.status}</div>\r\n                            <div>Admin: {admin.login}</div>\r\n                            <div>Players: {players.length}</div>\r\n                        </div>}\r\n\r\n                        {login === admin.login && edit === true && <div className='edit-game info'>\r\n                            <form>\r\n                                <div>\r\n                                    <label>Nazwa gry:</label>\r\n                                    <input type='text' defaultValue={game.name} onChange={(e) => setEditForm({...editForm, name: e.target.value})}/>\r\n                                </div>\r\n                                <div>\r\n                                <label> Admin: </label>\r\n                                    <select defaultValue={admin.login} onChange={(e) => setEditForm({...editForm, admin: e.target.value})}>\r\n                                    {players.map((player) => \r\n                                        (<option key={player.login} value={player.login}>{player.login}</option>)\r\n                                    )}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label> maxPlayers: </label>\r\n                                    <select defaultValue={game.maxPlayers} onChange={(e) => setEditForm({...editForm, maxPlayers: e.target.value})}>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label> Status: </label>\r\n                                    <select defaultValue={game.status} onChange={(e) => setEditForm({...editForm, status: e.target.value}) }>\r\n                                        <option value=\"public\">public</option>\r\n                                        <option value=\"private\">private</option>\r\n                                    </select>\r\n                                </div>\r\n                            </form>\r\n                        </div>}\r\n\r\n                        { login === admin.login && edit === false && !game.gameStarted && players.length > 1 && <button onClick={Start}> Start game </button>}\r\n                        { login === admin.login && edit === false && !game.gameStarted && <button onClick={() => setEdit(true)}> Edit </button>}\r\n                        { login === admin.login && edit === true && <button onClick={Edit}> Save </button>}\r\n                        { login === admin.login && edit === true && <button onClick={() => {setEdit(false); setEditForm({})}}> Cancel </button>}\r\n\r\n                        { login !== \"\"  && <div>\r\n                            { inGame === false && players.length < game.maxPlayers && !game.gameStarted && <button onClick={Join}> Join game </button> }\r\n                            { inGame === true && <button onClick={Leave}> Leave game </button> }\r\n                        </div> }\r\n                        { inGame === false && <button onClick={GoBack}> Go back </button>}\r\n                        \r\n                    </div>\r\n\r\n                    <div className='players'>\r\n                        <h2>Players:</h2>\r\n                        {players.map((player) => {\r\n                            return (\r\n                                <div key={player.login}> {player.login} </div>\r\n                            )\r\n                        })}\r\n                        {login === admin.login && !invite && <div>\r\n                            <button onClick={CheckInvite}> Invite player </button>\r\n                        </div>}\r\n                        {invite && <form>\r\n                            <select defaultValue={admin.login} onChange={(e) => setUserToInvite(e.target.value)}>\r\n                                {onlineUsers.map((player) => \r\n                                    (<option key={player.login} value={player.login}>{player.login}</option>)\r\n                                )}\r\n                            </select>\r\n                            <button type='button' onClick={Invite}> Invite </button>\r\n                            <button type='button' onClick={() => setInvite(false)}> Cancel </button>\r\n                        </form>}\r\n                    </div>\r\n\r\n                    <div className='game-chat'>\r\n                        <div>\r\n                            {chat.map((message, index)=>{\r\n                                return(\r\n                                    <p key={index}>\r\n                                        {message}\r\n                                    </p>\r\n                                )}\r\n                            )}\r\n                        </div>\r\n                        { login && <input type=\"text\" value={message} onChange={onChangeMessage} onKeyUp={onChangeMessage} />}\r\n                        { login && <button onClick={Send}> Send </button>}\r\n                    </div>\r\n\r\n                    { !game.gameStarted && <div className='game wait-container'>\r\n                        <h1 className='wait'> Wait for admin to start the game </h1>\r\n                    </div>}\r\n\r\n                    { game.gameStarted && <div className='game'>\r\n                        < Game login={login} setGame2={setGame} inGame={inGame} Reload={Reload} />\r\n                    </div>}\r\n\r\n\r\n                </div>\r\n                }\r\n            </div>}\r\n            {error && <h1> {error} </h1>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GamePage;","import axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams, useNavigate, Link } from 'react-router-dom'\r\nimport bcrypt from 'bcryptjs'\r\nimport Cookies from 'js-cookie';\r\nimport properties from './mqttClient'\r\n\r\nfunction UserPage({userLogin, setMainLogin}) {\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [user, setUser] = useState({})\r\n    const [edit, setEdit] = useState(false)\r\n    const [editNewPassword, setEditNewPassword] = useState('')\r\n    const [editOldPassword, setEditOldPassword] = useState('')\r\n    const [editLogin, setEditLogin] = useState('')\r\n    const [wrongPassword, setWrongPassword] = useState(false)\r\n    const [deleteUser, setDeleteUser] = useState(false)\r\n    const [sendMessage, setSendMessage] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (userLogin){\r\n            properties.client.subscribe(`/messages/${userLogin}/+`)\r\n            properties.client.subscribe(`/messages/+/${userLogin}`)\r\n            properties.client.subscribe(`/invites/${userLogin}`)\r\n        }\r\n        axios.get(`http://localhost:5000/${login}`)\r\n            .then(async (response) => {\r\n                setUser(response.data)\r\n            }).catch((e) => {\r\n                if (e.response && e.response.status === 401) {\r\n                    setUser(undefined)\r\n                } else if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            });\r\n        setMessages(properties.messages)\r\n        return () => {\r\n            setUser({})\r\n        }\r\n    }, [login]);\r\n\r\n    function Reload() {\r\n        if (properties.usersReload) {\r\n            axios.get(`http://localhost:5000/${login}`)\r\n                .then(async (response) => {\r\n                    setUser(response.data)\r\n                }).catch((e) => {\r\n                    if (e.response && e.response.status === 401) {\r\n                        setUser(undefined)\r\n                    } else if (e.response){\r\n                        console.log(e.response.data)\r\n                    }\r\n                }).finally(() => {\r\n                    properties.usersReload = false\r\n                });\r\n        }\r\n        if (properties.messagesReload){\r\n            setMessages(properties.messages)\r\n            properties.messagesReload = false\r\n        }\r\n    }\r\n    setInterval(Reload, 1000);\r\n\r\n    function Save(){\r\n        if(bcrypt.compareSync(editOldPassword, user.password)){\r\n            axios.put(`http://localhost:5000/${login}`, {\r\n                login: editLogin,\r\n                password: editNewPassword\r\n            }).then(async (response) => {\r\n                properties.client.publish('/login', 'edit')\r\n                setMainLogin(response.data.login)\r\n                Cancel()\r\n                Cookies.set('login', response.data.login)\r\n                navigate(`/users/${response.data.login}`)\r\n            }).catch((e) => {\r\n                if (e.response){\r\n                    console.log(e.response.data)\r\n                }\r\n            });\r\n        } else {\r\n            setWrongPassword(true)\r\n        }\r\n    }\r\n\r\n    function Delete(){\r\n        if (bcrypt.compareSync(editOldPassword, user.password)) {\r\n            axios.delete(`http://localhost:5000/${login}`)\r\n                .then(async (response) => {\r\n                    properties.client.publish('/login', 'edit')\r\n                    setMainLogin('')\r\n                    Cancel()\r\n                    Cookies.remove('login')\r\n                    navigate('/')\r\n                }).catch((e) => {\r\n                    if (e.response){\r\n                        console.log(e.response.data)\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            setWrongPassword(true)\r\n        }\r\n    }\r\n\r\n    function Send(){\r\n        if(message.trim().length > 0){\r\n            properties.client.publish(`/messages/${login}/${userLogin}`, JSON.stringify({from: userLogin, to:login, message: message, at: new Date()}))\r\n            setMessage('')\r\n            Cancel()\r\n        }\r\n    }\r\n\r\n    function Cancel(){\r\n        setEditNewPassword('')\r\n        setEditOldPassword('')\r\n        setEditLogin('')\r\n        setEdit(false)\r\n        setWrongPassword(false)\r\n        setDeleteUser(false)\r\n        setSendMessage(false)\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!user && <h1>User not found</h1>}\r\n            {user && <div className='userPage'>\r\n                <h1>{user.login} PAGE</h1>\r\n                <div className='info'>\r\n                    <h3>\r\n                        {user.login}\r\n                        {user.loggedIn && <div className='online'>(online)</div>}\r\n                    </h3>\r\n                    {edit && <form>\r\n                        {wrongPassword && <div className='wrongPassword'>Wrong password</div>}\r\n\r\n                        <label> New login: </label>\r\n                        <input type=\"text\" id=\"login\" onChange={(e) => setEditLogin(e.target.value)}></input>\r\n                    \r\n                        <label> New password: </label>\r\n                        <input type=\"password\" id=\"newpassword\" onChange={(e) => setEditNewPassword(e.target.value)}></input>\r\n\r\n                        <label> Old password: </label>\r\n                        <input type=\"password\" id=\"oldpassword\" onChange={(e) => setEditOldPassword(e.target.value)}></input>\r\n\r\n                        <button type='button' onClick={Save}> Save </button>\r\n                        <button type='button' onClick={Cancel}> Cancel </button>\r\n                    </form> }\r\n                    {deleteUser && <form>\r\n                        {wrongPassword && <div className='wrongPassword'>Wrong password</div>}\r\n                        <label> Password: </label>\r\n                        <input type=\"password\" id=\"password\" onChange={(e) => setEditOldPassword(e.target.value)}></input>\r\n\r\n                        <button type='button' onClick={Delete}> Delete </button>\r\n                        <button type='button' onClick={Cancel}> Cancel </button>\r\n                    </form> }\r\n                    {sendMessage && <form>\r\n                        <label> Message: </label>\r\n                        <textarea id=\"message\" onChange={(e) => setMessage(e.target.value)}></textarea>\r\n\r\n                        <button type='button' onClick={Send}> Send </button>\r\n                        <button type='button' onClick={Cancel}> Cancel </button>\r\n                    </form> }\r\n                    {user.login === userLogin && user.login && !(user.login.startsWith('guest-')) && !edit && <button onClick={() => setEdit(true)}>Edit profile</button>}\r\n                    {user.login === userLogin && user.login && !(user.login.startsWith('guest-')) && !deleteUser && <button onClick={() => setDeleteUser(true)}>Delete profile</button>}\r\n                    {!(user.login === userLogin) && userLogin && user.loggedIn && !sendMessage && <button onClick={() => setSendMessage(true)}> Send message </button>}\r\n                    <button onClick={() => navigate('/')}> Go back </button>\r\n                </div>\r\n                {userLogin && messages.length > 0 && <div className='messagesSection'>\r\n                    <h2>Messages</h2>\r\n                    <div className='messages'>\r\n                        {messages.map((message, index) => {\r\n                            if (message.from === login || message.to === login) {\r\n                                return (<div key={index} className='message'>\r\n                                    <div className='from'>From: \r\n                                        <Link to={`/users/${message.from}`} style={{ color: 'inherit', textDecoration: 'inherit'}}>{message.from}</Link>\r\n                                    </div>\r\n                                    <div className='to'>To: \r\n                                        <Link to={`/users/${message.to}`} style={{ color: 'inherit', textDecoration: 'inherit'}}>{message.to}</Link>\r\n                                    </div>\r\n                                    <div className='at'>At: {new Date(message.at).getHours()}:{new Date(message.at).getMinutes()}</div>\r\n                                    <div className='messageText'>{message.message}</div>\r\n                                </div>)\r\n                            }\r\n                            return null\r\n                        })}\r\n                    </div>\r\n                </div>}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPage;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport LoginPage from './LoginPage';\nimport RegisterPage from './RegisterPage';\nimport GamesPage from './GamesPage';\nimport GamePage from './GamePage';\nimport UserPage from './UserPage';\n\nfunction App() {\n  const [login, setLogin] = useState('')\n\n  useEffect(() => {\n    const cookie = Cookies.get('login')\n    if(cookie){\n      setLogin(cookie)\n    }\n  }, []) \n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n\n          <Route exact path=\"/\" element={<GamesPage login={login} setMainLogin={setLogin} />} />\n\n          <Route exact path =\"/login\" element={<LoginPage setMainLogin={setLogin} />} />\n\n          <Route exact path=\"/register\" element={<RegisterPage />} />\n\n          <Route exact path=\"/games\" element={<GamesPage login={login} setMainLogin={setLogin} />} />\n\n          <Route exact path=\"/games/:id\" element={<GamePage login={login} />} />\n\n          <Route exact path=\"/users/:login\" element={<UserPage userLogin={login} setMainLogin={setLogin} />} />\n\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n","var map = {\n\t\"./lek-blue.png\": 244,\n\t\"./lek-green.png\": 245,\n\t\"./lek-red.png\": 246,\n\t\"./lek-yellow.png\": 247,\n\t\"./organ-blue-cured.png\": 117,\n\t\"./organ-blue-infected.png\": 109,\n\t\"./organ-blue-treated.png\": 113,\n\t\"./organ-blue.png\": 248,\n\t\"./organ-green-cured.png\": 118,\n\t\"./organ-green-infected.png\": 110,\n\t\"./organ-green-treated.png\": 114,\n\t\"./organ-green.png\": 249,\n\t\"./organ-red-cured.png\": 119,\n\t\"./organ-red-infected.png\": 111,\n\t\"./organ-red-treated.png\": 115,\n\t\"./organ-red.png\": 250,\n\t\"./organ-yellow-cured.png\": 120,\n\t\"./organ-yellow-infected.png\": 112,\n\t\"./organ-yellow-treated.png\": 116,\n\t\"./organ-yellow.png\": 251,\n\t\"./wirus-blue.png\": 252,\n\t\"./wirus-green.png\": 253,\n\t\"./wirus-red.png\": 254,\n\t\"./wirus-yellow.png\": 255\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","var map = {\n\t\"./organ-blue-infected.png\": 109,\n\t\"./organ-green-infected.png\": 110,\n\t\"./organ-red-infected.png\": 111,\n\t\"./organ-yellow-infected.png\": 112\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 57;","var map = {\n\t\"./organ-blue-treated.png\": 113,\n\t\"./organ-green-treated.png\": 114,\n\t\"./organ-red-treated.png\": 115,\n\t\"./organ-yellow-treated.png\": 116\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;","var map = {\n\t\"./organ-blue-cured.png\": 117,\n\t\"./organ-green-cured.png\": 118,\n\t\"./organ-red-cured.png\": 119,\n\t\"./organ-yellow-cured.png\": 120\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 59;"],"sourceRoot":""}